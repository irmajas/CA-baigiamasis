{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\irmaj\\\\Desktop\\\\Baigiamasis\\\\ca-uzduotis\\\\src\\\\main\\\\app\\\\src\\\\components\\\\IrasasEdit\\\\index.js\";\nimport React from 'react';\nimport './index.css';\nimport { API_ENDPOINTS } from \"../utils/constants\";\nimport { useEffect, useState } from \"react\";\nimport { API_DOMAIN } from \"../utils/constants\";\nimport { async } from 'q';\nimport KomentaruAts from '../KomentaruAts';\nimport { put } from \"../utils/put\";\nimport { delrest } from \"../utils/delete\";\n\nclass IrasasEdit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      irasas: {},\n      loadingis: true\n    };\n  }\n\n  componentDidMount() {\n    const value = this.props.value;\n    const url = API_ENDPOINTS.vienasirasas + \"/\" + value;\n    this.setState({\n      loadingis: true\n    });\n    fetch(\"\".concat(API_DOMAIN).concat(url)).then(response => response.json()).then(data => {\n      this.setState({\n        irasas: data,\n        loadingis: false\n      });\n    });\n  }\n\n  dochange(event) {\n    const _event$target = event.target,\n          name = _event$target.name,\n          type = _event$target.type,\n          value = _event$target.value,\n          checked = _event$target.checked;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: updateIrasas,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"formlaukas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Pavadinimas\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      cols: \"80\",\n      rows: \"3\",\n      name: \"pavadinimas\",\n      value: irasas.pavadinimas,\n      onChange: dochange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"formlaukas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Tekstas\"), React.createElement(\"textarea\", {\n      type: \"text\",\n      cols: \"80\",\n      rows: \"35\",\n      name: \"tekstas\",\n      value: irasas.tekstas,\n      onChange: dochange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      className: \"formlaukas\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"\\u012Era\\u0161yti\"));\n  }\n\n} // function EditIrasasForm(props) {\n//   const [pav, setPav] = useState(props.pavadinimas);\n//   const initialFormState = { pavadinimas: props.pavadinimas, tekstas: 'Default tekstas' };\n//   const [irasas, setIrasas] = useState(initialFormState);\n//   const handleInputChange = event => {\n//     const { name, value } = event.target;\n//     setIrasas({ ...irasas, [name]: value })\n//   };\n//   const updateIrasas = async event => {\n//     event.preventDefault();\n//     if (!irasas.pavadinimas || !irasas.tekstas) return;\n//     const response = await put(API_ENDPOINTS.updateIrasas + \"/\" + props.value, irasas);\n//   };\n\n\nexport default IrasasEdit;","map":{"version":3,"sources":["C:\\Users\\irmaj\\Desktop\\Baigiamasis\\ca-uzduotis\\src\\main\\app\\src\\components\\IrasasEdit\\index.js"],"names":["React","API_ENDPOINTS","useEffect","useState","API_DOMAIN","async","KomentaruAts","put","delrest","IrasasEdit","Component","constructor","props","state","irasas","loadingis","componentDidMount","value","url","vienasirasas","setState","fetch","then","response","json","data","dochange","event","target","name","type","checked","render","updateIrasas","pavadinimas","tekstas"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,KAAT,QAAsB,GAAtB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,iBAAxB;;AAEA,MAAMC,UAAN,SAAyBT,KAAK,CAACU,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,EADG;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AAGDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAzB;AACA,UAAMC,GAAG,GAAGjB,aAAa,CAACkB,YAAd,GAA6B,GAA7B,GAAmCF,KAA/C;AACA,SAAKG,QAAL,CAAc;AAAEL,MAAAA,SAAS,EAAE;AAAb,KAAd;AACAM,IAAAA,KAAK,WAAIjB,UAAJ,SAAiBc,GAAjB,EAAL,CACKI,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV,WAAKL,QAAL,CAAc;AACVN,QAAAA,MAAM,EAAEW,IADE;AAEVV,QAAAA,SAAS,EAAE;AAFD,OAAd;AAIH,KAPL;AAQG;;AACDW,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AAAA,0BACyBA,KAAK,CAACC,MAD/B;AAAA,UACNC,IADM,iBACNA,IADM;AAAA,UACAC,IADA,iBACAA,IADA;AAAA,UACMb,KADN,iBACMA,KADN;AAAA,UACac,OADb,iBACaA,OADb;AAEd,SAAKX,QAAL,CAAc;AAAE,OAACS,IAAD,GAAQZ;AAAV,KAAd;AACD;;AACLe,EAAAA,MAAM,GAAE;AAEN,WACE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAGE;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAC,IAA3B;AAAgC,MAAA,IAAI,EAAC,GAArC;AAAyC,MAAA,IAAI,EAAC,aAA9C;AAA4D,MAAA,KAAK,EAAEnB,MAAM,CAACoB,WAA1E;AAAwF,MAAA,QAAQ,EAAER,QAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAME;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAU,MAAA,IAAI,EAAC,MAAf;AAAsB,MAAA,IAAI,EAAC,IAA3B;AAAgC,MAAA,IAAI,EAAC,IAArC;AAA0C,MAAA,IAAI,EAAC,SAA/C;AAAyD,MAAA,KAAK,EAAEZ,MAAM,CAACqB,OAAvE;AAAiF,MAAA,QAAQ,EAAET,QAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CANF,EAUE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAVF,CADF;AAeD;;AA7CoC,C,CAgDzC;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;;;AAIA,eAAejB,UAAf","sourcesContent":["import React from 'react';\r\nimport './index.css';\r\nimport { API_ENDPOINTS } from \"../utils/constants\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { API_DOMAIN } from \"../utils/constants\";\r\nimport { async } from 'q';\r\nimport KomentaruAts from '../KomentaruAts';\r\nimport { put } from \"../utils/put\";\r\nimport { delrest } from \"../utils/delete\";\r\n\r\nclass IrasasEdit extends React.Component {\r\n  constructor(props) {\r\n  \r\n      super(props)\r\n      this.state = {\r\n        irasas: {},\r\n        loadingis: true\r\n      }\r\n    }\r\n  \r\n\r\n    componentDidMount() {\r\n      const value = this.props.value;\r\n      const url = API_ENDPOINTS.vienasirasas + \"/\" + value;\r\n      this.setState({ loadingis: true })\r\n      fetch(`${API_DOMAIN}${url}`)\r\n          .then(response => response.json())\r\n          .then(data => {\r\n              this.setState({\r\n                  irasas: data,\r\n                  loadingis: false\r\n              })\r\n          })\r\n        }\r\n        dochange(event) {\r\n          const { name, type, value, checked } = event.target\r\n          this.setState({ [name]: value })\r\n        } \r\n    render(){\r\n   \r\n      return (\r\n        <form onSubmit={updateIrasas}>\r\n          <div className=\"formlaukas\">\r\n            <label>Pavadinimas</label>\r\n    \r\n            <textarea type=\"text\" cols=\"80\" rows=\"3\" name=\"pavadinimas\" value={irasas.pavadinimas}  onChange={dochange} />\r\n          </div>\r\n          <div className=\"formlaukas\">\r\n            <label>Tekstas</label>\r\n            <textarea type=\"text\" cols=\"80\" rows=\"35\" name=\"tekstas\" value={irasas.tekstas}  onChange={dochange} />\r\n          </div>\r\n          <button className=\"formlaukas\">Įrašyti</button>\r\n    \r\n        </form>\r\n      )\r\n    }\r\n}\r\n\r\n// function EditIrasasForm(props) {\r\n//   const [pav, setPav] = useState(props.pavadinimas);\r\n//   const initialFormState = { pavadinimas: props.pavadinimas, tekstas: 'Default tekstas' };\r\n\r\n//   const [irasas, setIrasas] = useState(initialFormState);\r\n\r\n//   const handleInputChange = event => {\r\n//     const { name, value } = event.target;\r\n\r\n//     setIrasas({ ...irasas, [name]: value })\r\n//   };\r\n\r\n//   const updateIrasas = async event => {\r\n\r\n//     event.preventDefault();\r\n//     if (!irasas.pavadinimas || !irasas.tekstas) return;\r\n\r\n//     const response = await put(API_ENDPOINTS.updateIrasas + \"/\" + props.value, irasas);\r\n\r\n//   };\r\n \r\n\r\n  \r\nexport default IrasasEdit;\r\n"]},"metadata":{},"sourceType":"module"}